=> 0xffffffff82001260 <asm_exc_int3>:	endbr64
=> 0xffffffff82001264 <asm_exc_int3+4>:	nopl   (%rax)
=> 0xffffffff82001267 <asm_exc_int3+7>:	cld
=> 0xffffffff82001268 <asm_exc_int3+8>:	push   $0xffffffffffffffff
=> 0xffffffff8200126a <asm_exc_int3+10>:	testb  $0x3,0x10(%rsp)
=> 0xffffffff8200126f <asm_exc_int3+15>:	jne    0xffffffff82001289 <asm_exc_int3+41>
=> 0xffffffff82001289 <asm_exc_int3+41>:	call   0xffffffff82001970 <error_entry>
=> 0xffffffff82001970 <error_entry>:	push   %rsi
=> 0xffffffff82001971 <error_entry+1>:	mov    0x8(%rsp),%rsi
=> 0xffffffff82001976 <error_entry+6>:	mov    %rdi,0x8(%rsp)
=> 0xffffffff8200197b <error_entry+11>:	push   %rdx
=> 0xffffffff8200197c <error_entry+12>:	push   %rcx
=> 0xffffffff8200197d <error_entry+13>:	push   %rax
=> 0xffffffff8200197e <error_entry+14>:	push   %r8
=> 0xffffffff82001980 <error_entry+16>:	push   %r9
=> 0xffffffff82001982 <error_entry+18>:	push   %r10
=> 0xffffffff82001984 <error_entry+20>:	push   %r11
=> 0xffffffff82001986 <error_entry+22>:	push   %rbx
=> 0xffffffff82001987 <error_entry+23>:	push   %rbp
=> 0xffffffff82001988 <error_entry+24>:	push   %r12
=> 0xffffffff8200198a <error_entry+26>:	push   %r13
=> 0xffffffff8200198c <error_entry+28>:	push   %r14
=> 0xffffffff8200198e <error_entry+30>:	push   %r15
=> 0xffffffff82001990 <error_entry+32>:	push   %rsi
=> 0xffffffff82001991 <error_entry+33>:	xor    %esi,%esi
=> 0xffffffff82001993 <error_entry+35>:	xor    %edx,%edx
=> 0xffffffff82001995 <error_entry+37>:	xor    %ecx,%ecx
=> 0xffffffff82001997 <error_entry+39>:	xor    %r8d,%r8d
=> 0xffffffff8200199a <error_entry+42>:	xor    %r9d,%r9d
=> 0xffffffff8200199d <error_entry+45>:	xor    %r10d,%r10d
=> 0xffffffff820019a0 <error_entry+48>:	xor    %r11d,%r11d
=> 0xffffffff820019a3 <error_entry+51>:	xor    %ebx,%ebx
=> 0xffffffff820019a5 <error_entry+53>:	xor    %ebp,%ebp
=> 0xffffffff820019a7 <error_entry+55>:	xor    %r12d,%r12d
=> 0xffffffff820019aa <error_entry+58>:	xor    %r13d,%r13d
=> 0xffffffff820019ad <error_entry+61>:	xor    %r14d,%r14d
=> 0xffffffff820019b0 <error_entry+64>:	xor    %r15d,%r15d
=> 0xffffffff820019b3 <error_entry+67>:	testb  $0x3,0x90(%rsp)
=> 0xffffffff820019bb <error_entry+75>:	je     0xffffffff82001a07 <error_entry+151>
=> 0xffffffff820019bd <error_entry+77>:	swapgs
=> 0xffffffff820019c0 <error_entry+80>:	nopl   (%rax)
=> 0xffffffff820019c3 <error_entry+83>:	jmp    0xffffffff820019d6 <error_entry+102>
=> 0xffffffff820019d6 <error_entry+102>:	jmp    0xffffffff820019ee <error_entry+126>
=> 0xffffffff820019ee <error_entry+126>:	jmp    0xffffffff820019fd <error_entry+141>
=> 0xffffffff820019fd <error_entry+141>:	lea    0x8(%rsp),%rdi
=> 0xffffffff82001a02 <error_entry+146>:	jmp    0xffffffff81e81380 <sync_regs>
=> 0xffffffff81e81380 <sync_regs>:	nopw   (%rax)
=> 0xffffffff81e81384 <sync_regs+4>:	mov    %rdi,%rsi
=> 0xffffffff81e81387 <sync_regs+7>:	mov    %gs:0x7e1a9649(%rip),%rax        # 0x2a9d8 <pcpu_hot+24>
=> 0xffffffff81e8138f <sync_regs+15>:	sub    $0xa8,%rax
=> 0xffffffff81e81395 <sync_regs+21>:	cmp    %rdi,%rax
=> 0xffffffff81e81398 <sync_regs+24>:	je     0xffffffff81e813a5 <sync_regs+37>
=> 0xffffffff81e8139a <sync_regs+26>:	mov    $0x15,%ecx
=> 0xffffffff81e8139f <sync_regs+31>:	mov    %rax,%rdi
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a2 <sync_regs+34>:	rep movsq %ds:(%rsi),%es:(%rdi)
=> 0xffffffff81e813a5 <sync_regs+37>:	ret
=> 0xffffffff8200128e <asm_exc_int3+46>:	mov    %rax,%rsp
=> 0xffffffff82001291 <asm_exc_int3+49>:	mov    %rsp,%rdi
=> 0xffffffff82001294 <asm_exc_int3+52>:	call   0xffffffff81e81280 <exc_int3>
=> 0xffffffff81e81280 <exc_int3>:	nopw   (%rax)
=> 0xffffffff81e81284 <exc_int3+4>:	push   %rbp
=> 0xffffffff81e81285 <exc_int3+5>:	push   %rbx
=> 0xffffffff81e81286 <exc_int3+6>:	mov    %rdi,%rbx
=> 0xffffffff81e81289 <exc_int3+9>:	call   0xffffffff81e82200 <poke_int3_handler>
=> 0xffffffff81e82200 <poke_int3_handler>:	nopw   (%rax)
=> 0xffffffff81e82204 <poke_int3_handler+4>:	testb  $0x3,0x88(%rdi)
=> 0xffffffff81e8220b <poke_int3_handler+11>:	jne    0xffffffff81e82266 <poke_int3_handler+102>
=> 0xffffffff81e82266 <poke_int3_handler+102>:	xor    %eax,%eax
=> 0xffffffff81e82268 <poke_int3_handler+104>:	ret
=> 0xffffffff81e8128e <exc_int3+14>:	test   %eax,%eax
=> 0xffffffff81e81290 <exc_int3+16>:	jne    0xffffffff81e8134c <exc_int3+204>
=> 0xffffffff81e81296 <exc_int3+22>:	mov    %rbx,%rdi
=> 0xffffffff81e81299 <exc_int3+25>:	testb  $0x3,0x88(%rbx)
=> 0xffffffff81e812a0 <exc_int3+32>:	je     0xffffffff81e81310 <exc_int3+144>
=> 0xffffffff81e812a2 <exc_int3+34>:	call   0xffffffff81e85010 <irqentry_enter_from_user_mode>
=> 0xffffffff81e85010 <irqentry_enter_from_user_mode>:	nopw   (%rax)
=> 0xffffffff81e85014 <irqentry_enter_from_user_mode+4>:	ret
=> 0xffffffff81e812a7 <exc_int3+39>:	xor    %ecx,%ecx
=> 0xffffffff81e812a9 <exc_int3+41>:	mov    $0x5,%r9d
=> 0xffffffff81e812af <exc_int3+47>:	mov    %rbx,%rdx
=> 0xffffffff81e812b2 <exc_int3+50>:	mov    $0x3,%r8d
=> 0xffffffff81e812b8 <exc_int3+56>:	mov    $0xffffffff82653a2f,%rsi
=> 0xffffffff81e812bf <exc_int3+63>:	mov    $0x2,%edi
=> 0xffffffff81e812c4 <exc_int3+68>:	call   0xffffffff810b32a0 <notify_die>
=> 0xffffffff810b32a0 <notify_die>:	nopw   (%rax)
=> 0xffffffff810b32a4 <notify_die+4>:	push   %rbx
=> 0xffffffff810b32a5 <notify_die+5>:	mov    %edi,%ebx
=> 0xffffffff810b32a7 <notify_die+7>:	sub    $0x28,%rsp
=> 0xffffffff810b32ab <notify_die+11>:	mov    %gs:0x28,%rax
=> 0xffffffff810b32b4 <notify_die+20>:	mov    %rax,0x20(%rsp)
=> 0xffffffff810b32b9 <notify_die+25>:	xor    %eax,%eax
=> 0xffffffff810b32bb <notify_die+27>:	mov    %rdx,(%rsp)
=> 0xffffffff810b32bf <notify_die+31>:	mov    %rsi,0x8(%rsp)
=> 0xffffffff810b32c4 <notify_die+36>:	mov    %rcx,0x10(%rsp)
=> 0xffffffff810b32c9 <notify_die+41>:	mov    %r8d,0x18(%rsp)
=> 0xffffffff810b32ce <notify_die+46>:	mov    %r9d,0x1c(%rsp)
=> 0xffffffff810b32d3 <notify_die+51>:	call   0xffffffff81120150 <__rcu_read_lock>
=> 0xffffffff81120150 <__rcu_read_lock>:	nopw   (%rax)
=> 0xffffffff81120154 <__rcu_read_lock+4>:	mov    %gs:0x2a9c0,%rdx
=> 0xffffffff8112015d <__rcu_read_lock+13>:	mov    0x3f4(%rdx),%eax
=> 0xffffffff81120163 <__rcu_read_lock+19>:	add    $0x1,%eax
=> 0xffffffff81120166 <__rcu_read_lock+22>:	mov    %eax,0x3f4(%rdx)
=> 0xffffffff8112016c <__rcu_read_lock+28>:	ret
=> 0xffffffff810b32d8 <notify_die+56>:	mov    %ebx,%esi
=> 0xffffffff810b32da <notify_die+58>:	xor    %r8d,%r8d
=> 0xffffffff810b32dd <notify_die+61>:	mov    $0xffffffff,%ecx
=> 0xffffffff810b32e2 <notify_die+66>:	mov    %rsp,%rdx
=> 0xffffffff810b32e5 <notify_die+69>:	mov    $0xffffffff83350678,%rdi
=> 0xffffffff810b32ec <notify_die+76>:	call   0xffffffff810b2ac0 <notifier_call_chain>
=> 0xffffffff810b2ac0 <notifier_call_chain>:	push   %r15
=> 0xffffffff810b2ac2 <notifier_call_chain+2>:	push   %r14
=> 0xffffffff810b2ac4 <notifier_call_chain+4>:	push   %r13
=> 0xffffffff810b2ac6 <notifier_call_chain+6>:	push   %r12
=> 0xffffffff810b2ac8 <notifier_call_chain+8>:	push   %rbp
=> 0xffffffff810b2ac9 <notifier_call_chain+9>:	push   %rbx
=> 0xffffffff810b2aca <notifier_call_chain+10>:	mov    (%rdi),%rbx
=> 0xffffffff810b2acd <notifier_call_chain+13>:	test   %rbx,%rbx
=> 0xffffffff810b2ad0 <notifier_call_chain+16>:	je     0xffffffff810b2b79 <notifier_call_chain+185>
=> 0xffffffff810b2ad6 <notifier_call_chain+22>:	mov    %rsi,%r12
=> 0xffffffff810b2ad9 <notifier_call_chain+25>:	mov    %rdx,%r13
=> 0xffffffff810b2adc <notifier_call_chain+28>:	mov    %ecx,%r14d
=> 0xffffffff810b2adf <notifier_call_chain+31>:	mov    %r8,%r15
=> 0xffffffff810b2ae2 <notifier_call_chain+34>:	test   %ecx,%ecx
=> 0xffffffff810b2ae4 <notifier_call_chain+36>:	jne    0xffffffff810b2af9 <notifier_call_chain+57>
=> 0xffffffff810b2af9 <notifier_call_chain+57>:	mov    %rbx,%rbp
=> 0xffffffff810b2afc <notifier_call_chain+60>:	mov    0x8(%rbx),%rbx
=> 0xffffffff810b2b00 <notifier_call_chain+64>:	mov    0x0(%rbp),%rax
=> 0xffffffff810b2b04 <notifier_call_chain+68>:	xchg   %ax,%ax
=> 0xffffffff810b2b06 <notifier_call_chain+70>:	mov    %r13,%rdx
=> 0xffffffff810b2b09 <notifier_call_chain+73>:	mov    %r12,%rsi
=> 0xffffffff810b2b0c <notifier_call_chain+76>:	mov    %rbp,%rdi
=> 0xffffffff810b2b0f <notifier_call_chain+79>:	call   0xffffffff81e91480 <__x86_indirect_thunk_array>
=> 0xffffffff81e91480 <__x86_indirect_thunk_array>:	call   0xffffffff81e91486 <__x86_indirect_thunk_array+6>
=> 0xffffffff81e91486 <__x86_indirect_thunk_array+6>:	mov    %rax,(%rsp)
=> 0xffffffff81e9148a <__x86_indirect_thunk_array+10>:	ret
=> 0xffffffff81037130 <hw_breakpoint_exceptions_notify>:	endbr64
=> 0xffffffff81037134 <hw_breakpoint_exceptions_notify+4>:	cmp    $0x3,%rsi
=> 0xffffffff81037138 <hw_breakpoint_exceptions_notify+8>:	je     0xffffffff81037141 <hw_breakpoint_exceptions_notify+17>
=> 0xffffffff8103713a <hw_breakpoint_exceptions_notify+10>:	xor    %eax,%eax
=> 0xffffffff8103713c <hw_breakpoint_exceptions_notify+12>:	ret
=> 0xffffffff810b2b14 <notifier_call_chain+84>:	test   %r15,%r15
=> 0xffffffff810b2b17 <notifier_call_chain+87>:	je     0xffffffff810b2b1d <notifier_call_chain+93>
=> 0xffffffff810b2b1d <notifier_call_chain+93>:	test   $0x80,%ah
=> 0xffffffff810b2b20 <notifier_call_chain+96>:	je     0xffffffff810b2aeb <notifier_call_chain+43>
=> 0xffffffff810b2aeb <notifier_call_chain+43>:	sub    $0x1,%r14d
=> 0xffffffff810b2aef <notifier_call_chain+47>:	test   %rbx,%rbx
=> 0xffffffff810b2af2 <notifier_call_chain+50>:	je     0xffffffff810b2b22 <notifier_call_chain+98>
=> 0xffffffff810b2af4 <notifier_call_chain+52>:	test   %r14d,%r14d
=> 0xffffffff810b2af7 <notifier_call_chain+55>:	je     0xffffffff810b2b22 <notifier_call_chain+98>
=> 0xffffffff810b2af9 <notifier_call_chain+57>:	mov    %rbx,%rbp
=> 0xffffffff810b2afc <notifier_call_chain+60>:	mov    0x8(%rbx),%rbx
=> 0xffffffff810b2b00 <notifier_call_chain+64>:	mov    0x0(%rbp),%rax
=> 0xffffffff810b2b04 <notifier_call_chain+68>:	xchg   %ax,%ax
=> 0xffffffff810b2b06 <notifier_call_chain+70>:	mov    %r13,%rdx
=> 0xffffffff810b2b09 <notifier_call_chain+73>:	mov    %r12,%rsi
=> 0xffffffff810b2b0c <notifier_call_chain+76>:	mov    %rbp,%rdi
=> 0xffffffff810b2b0f <notifier_call_chain+79>:	call   0xffffffff81e91480 <__x86_indirect_thunk_array>
=> 0xffffffff81e91480 <__x86_indirect_thunk_array>:	call   0xffffffff81e91486 <__x86_indirect_thunk_array+6>
=> 0xffffffff81e91486 <__x86_indirect_thunk_array+6>:	mov    %rax,(%rsp)
=> 0xffffffff81e9148a <__x86_indirect_thunk_array+10>:	ret
=> 0xffffffff81192bb0 <trace_die_panic_handler>:	endbr64
=> 0xffffffff81192bb4 <trace_die_panic_handler+4>:	mov    0x2205baa(%rip),%eax        # 0xffffffff83398764 <ftrace_dump_on_oops>
=> 0xffffffff81192bba <trace_die_panic_handler+10>:	test   %eax,%eax
=> 0xffffffff81192bbc <trace_die_panic_handler+12>:	je     0xffffffff81192bd4 <trace_die_panic_handler+36>
=> 0xffffffff81192bd4 <trace_die_panic_handler+36>:	xor    %eax,%eax
=> 0xffffffff81192bd6 <trace_die_panic_handler+38>:	ret
=> 0xffffffff810b2b14 <notifier_call_chain+84>:	test   %r15,%r15
=> 0xffffffff810b2b17 <notifier_call_chain+87>:	je     0xffffffff810b2b1d <notifier_call_chain+93>
=> 0xffffffff810b2b1d <notifier_call_chain+93>:	test   $0x80,%ah
=> 0xffffffff810b2b20 <notifier_call_chain+96>:	je     0xffffffff810b2aeb <notifier_call_chain+43>
=> 0xffffffff810b2aeb <notifier_call_chain+43>:	sub    $0x1,%r14d
=> 0xffffffff810b2aef <notifier_call_chain+47>:	test   %rbx,%rbx
=> 0xffffffff810b2af2 <notifier_call_chain+50>:	je     0xffffffff810b2b22 <notifier_call_chain+98>
=> 0xffffffff810b2af4 <notifier_call_chain+52>:	test   %r14d,%r14d
=> 0xffffffff810b2af7 <notifier_call_chain+55>:	je     0xffffffff810b2b22 <notifier_call_chain+98>
=> 0xffffffff810b2af9 <notifier_call_chain+57>:	mov    %rbx,%rbp
=> 0xffffffff810b2afc <notifier_call_chain+60>:	mov    0x8(%rbx),%rbx
=> 0xffffffff810b2b00 <notifier_call_chain+64>:	mov    0x0(%rbp),%rax
=> 0xffffffff810b2b04 <notifier_call_chain+68>:	xchg   %ax,%ax
=> 0xffffffff810b2b06 <notifier_call_chain+70>:	mov    %r13,%rdx
=> 0xffffffff810b2b09 <notifier_call_chain+73>:	mov    %r12,%rsi
=> 0xffffffff810b2b0c <notifier_call_chain+76>:	mov    %rbp,%rdi
=> 0xffffffff810b2b0f <notifier_call_chain+79>:	call   0xffffffff81e91480 <__x86_indirect_thunk_array>
=> 0xffffffff81e91480 <__x86_indirect_thunk_array>:	call   0xffffffff81e91486 <__x86_indirect_thunk_array+6>
=> 0xffffffff81e91486 <__x86_indirect_thunk_array+6>:	mov    %rax,(%rsp)
=> 0xffffffff81e9148a <__x86_indirect_thunk_array+10>:	ret
=> 0xffffffff810690a0 <arch_uprobe_exception_notify>:	endbr64
=> 0xffffffff810690a4 <arch_uprobe_exception_notify+4>:	mov    (%rdx),%rdi
=> 0xffffffff810690a7 <arch_uprobe_exception_notify+7>:	test   %rdi,%rdi
=> 0xffffffff810690aa <arch_uprobe_exception_notify+10>:	je     0xffffffff810690b5 <arch_uprobe_exception_notify+21>
=> 0xffffffff810690ac <arch_uprobe_exception_notify+12>:	testb  $0x3,0x88(%rdi)
=> 0xffffffff810690b3 <arch_uprobe_exception_notify+19>:	je     0xffffffff810690c1 <arch_uprobe_exception_notify+33>
=> 0xffffffff810690b5 <arch_uprobe_exception_notify+21>:	cmp    $0x2,%rsi
=> 0xffffffff810690b9 <arch_uprobe_exception_notify+25>:	je     0xffffffff810690db <arch_uprobe_exception_notify+59>
=> 0xffffffff810690db <arch_uprobe_exception_notify+59>:	call   0xffffffff811d3230 <uprobe_pre_sstep_notifier>
=> 0xffffffff811d3230 <uprobe_pre_sstep_notifier>:	nopw   (%rax)
=> 0xffffffff811d3234 <uprobe_pre_sstep_notifier+4>:	mov    %gs:0x2a9c0,%rax
=> 0xffffffff811d323d <uprobe_pre_sstep_notifier+13>:	cmpq   $0x0,0x4a8(%rax)
=> 0xffffffff811d3245 <uprobe_pre_sstep_notifier+21>:	je     0xffffffff811d328d <uprobe_pre_sstep_notifier+93>
=> 0xffffffff811d3247 <uprobe_pre_sstep_notifier+23>:	mov    0x4a8(%rax),%rdx
=> 0xffffffff811d324e <uprobe_pre_sstep_notifier+30>:	mov    0x468(%rdx),%rdx
=> 0xffffffff811d3255 <uprobe_pre_sstep_notifier+37>:	test   $0x80000,%edx
=> 0xffffffff811d325b <uprobe_pre_sstep_notifier+43>:	jne    0xffffffff811d3275 <uprobe_pre_sstep_notifier+69>
=> 0xffffffff811d325d <uprobe_pre_sstep_notifier+45>:	cmpq   $0x0,0xa38(%rax)
=> 0xffffffff811d3265 <uprobe_pre_sstep_notifier+53>:	je     0xffffffff811d328d <uprobe_pre_sstep_notifier+93>
=> 0xffffffff811d328d <uprobe_pre_sstep_notifier+93>:	xor    %eax,%eax
=> 0xffffffff811d328f <uprobe_pre_sstep_notifier+95>:	ret
=> 0xffffffff810690e0 <arch_uprobe_exception_notify+64>:	test   %eax,%eax
=> 0xffffffff810690e2 <arch_uprobe_exception_notify+66>:	jne    0xffffffff810690d1 <arch_uprobe_exception_notify+49>
=> 0xffffffff810690e4 <arch_uprobe_exception_notify+68>:	xor    %eax,%eax
=> 0xffffffff810690e6 <arch_uprobe_exception_notify+70>:	ret
=> 0xffffffff810b2b14 <notifier_call_chain+84>:	test   %r15,%r15
=> 0xffffffff810b2b17 <notifier_call_chain+87>:	je     0xffffffff810b2b1d <notifier_call_chain+93>
=> 0xffffffff810b2b1d <notifier_call_chain+93>:	test   $0x80,%ah
=> 0xffffffff810b2b20 <notifier_call_chain+96>:	je     0xffffffff810b2aeb <notifier_call_chain+43>
=> 0xffffffff810b2aeb <notifier_call_chain+43>:	sub    $0x1,%r14d
=> 0xffffffff810b2aef <notifier_call_chain+47>:	test   %rbx,%rbx
=> 0xffffffff810b2af2 <notifier_call_chain+50>:	je     0xffffffff810b2b22 <notifier_call_chain+98>
=> 0xffffffff810b2b22 <notifier_call_chain+98>:	pop    %rbx
=> 0xffffffff810b2b23 <notifier_call_chain+99>:	pop    %rbp
=> 0xffffffff810b2b24 <notifier_call_chain+100>:	pop    %r12
=> 0xffffffff810b2b26 <notifier_call_chain+102>:	pop    %r13
=> 0xffffffff810b2b28 <notifier_call_chain+104>:	pop    %r14
=> 0xffffffff810b2b2a <notifier_call_chain+106>:	pop    %r15
=> 0xffffffff810b2b2c <notifier_call_chain+108>:	ret
=> 0xffffffff810b32f1 <notify_die+81>:	mov    %eax,%ebx
=> 0xffffffff810b32f3 <notify_die+83>:	call   0xffffffff81120190 <__rcu_read_unlock>
=> 0xffffffff81120190 <__rcu_read_unlock>:	nopw   (%rax)
=> 0xffffffff81120194 <__rcu_read_unlock+4>:	mov    %gs:0x2a9c0,%rdi
=> 0xffffffff8112019d <__rcu_read_unlock+13>:	subl   $0x1,0x3f4(%rdi)
=> 0xffffffff811201a4 <__rcu_read_unlock+20>:	jne    0xffffffff811201b0 <__rcu_read_unlock+32>
=> 0xffffffff811201a6 <__rcu_read_unlock+22>:	mov    0x3f8(%rdi),%eax
=> 0xffffffff811201ac <__rcu_read_unlock+28>:	test   %eax,%eax
=> 0xffffffff811201ae <__rcu_read_unlock+30>:	jne    0xffffffff811201b5 <__rcu_read_unlock+37>
=> 0xffffffff811201b0 <__rcu_read_unlock+32>:	ret
=> 0xffffffff810b32f8 <notify_die+88>:	mov    0x20(%rsp),%rax
=> 0xffffffff810b32fd <notify_die+93>:	sub    %gs:0x28,%rax
=> 0xffffffff810b3306 <notify_die+102>:	jne    0xffffffff810b3314 <notify_die+116>
=> 0xffffffff810b3308 <notify_die+104>:	add    $0x28,%rsp
=> 0xffffffff810b330c <notify_die+108>:	mov    %ebx,%eax
=> 0xffffffff810b330e <notify_die+110>:	pop    %rbx
=> 0xffffffff810b330f <notify_die+111>:	ret
=> 0xffffffff81e812c9 <exc_int3+73>:	cmp    $0x8001,%eax
=> 0xffffffff81e812ce <exc_int3+78>:	je     0xffffffff81e81306 <exc_int3+134>
=> 0xffffffff81e812d0 <exc_int3+80>:	testb  $0x2,0x91(%rbx)
=> 0xffffffff81e812d7 <exc_int3+87>:	je     0xffffffff81e812da <exc_int3+90>
=> 0xffffffff81e812d9 <exc_int3+89>:	sti
=> 0xffffffff81e812da <exc_int3+90>:	push   $0x0
=> 0xffffffff81e812dc <exc_int3+92>:	xor    %r9d,%r9d
=> 0xffffffff81e812df <exc_int3+95>:	xor    %r8d,%r8d
=> 0xffffffff81e812e2 <exc_int3+98>:	mov    %rbx,%rcx
=> 0xffffffff81e812e5 <exc_int3+101>:	mov    $0xffffffff82653a2f,%rdx
=> 0xffffffff81e812ec <exc_int3+108>:	mov    $0x5,%esi
=> 0xffffffff81e812f1 <exc_int3+113>:	mov    $0x3,%edi
=> 0xffffffff81e812f6 <exc_int3+118>:	call   0xffffffff8102b550 <do_trap>
=> 0xffffffff8102b550 <do_trap>:	push   %r15
=> 0xffffffff8102b552 <do_trap+2>:	push   %r14
=> 0xffffffff8102b554 <do_trap+4>:	mov    %r8,%r14
=> 0xffffffff8102b557 <do_trap+7>:	push   %r13
=> 0xffffffff8102b559 <do_trap+9>:	mov    %edi,%r13d
=> 0xffffffff8102b55c <do_trap+12>:	push   %r12
=> 0xffffffff8102b55e <do_trap+14>:	mov    %r9d,%r12d
=> 0xffffffff8102b561 <do_trap+17>:	push   %rbp
=> 0xffffffff8102b562 <do_trap+18>:	mov    %esi,%ebp
=> 0xffffffff8102b564 <do_trap+20>:	mov    %edi,%esi
=> 0xffffffff8102b566 <do_trap+22>:	push   %rbx
=> 0xffffffff8102b567 <do_trap+23>:	mov    %rcx,%rbx
=> 0xffffffff8102b56a <do_trap+26>:	mov    %gs:0x2a9c0,%r15
=> 0xffffffff8102b573 <do_trap+35>:	mov    %rbx,%rdi
=> 0xffffffff8102b576 <do_trap+38>:	sub    $0x18,%rsp
=> 0xffffffff8102b57a <do_trap+42>:	testb  $0x3,0x88(%rcx)
=> 0xffffffff8102b581 <do_trap+49>:	mov    $0x0,%ecx
=> 0xffffffff8102b586 <do_trap+54>:	mov    0x50(%rsp),%rax
=> 0xffffffff8102b58b <do_trap+59>:	mov    %rdx,(%rsp)
=> 0xffffffff8102b58f <do_trap+63>:	mov    %r8,%rdx
=> 0xffffffff8102b592 <do_trap+66>:	mov    %rax,0x8(%rsp)
=> 0xffffffff8102b597 <do_trap+71>:	jne    0xffffffff8102b5b5 <do_trap+101>
=> 0xffffffff8102b5b5 <do_trap+101>:	call   0xffffffff81002a10 <fixup_vdso_exception>
=> 0xffffffff81002a10 <fixup_vdso_exception>:	nopw   (%rax)
=> 0xffffffff81002a14 <fixup_vdso_exception+4>:	movslq %esi,%r8
=> 0xffffffff81002a17 <fixup_vdso_exception+7>:	mov    %rdx,%r10
=> 0xffffffff81002a1a <fixup_vdso_exception+10>:	mov    %rdi,%r11
=> 0xffffffff81002a1d <fixup_vdso_exception+13>:	mov    %rcx,%r9
=> 0xffffffff81002a20 <fixup_vdso_exception+16>:	mov    %r8d,%eax
=> 0xffffffff81002a23 <fixup_vdso_exception+19>:	xor    %esi,%esi
=> 0xffffffff81002a25 <fixup_vdso_exception+21>:	and    $0xfffffffd,%eax
=> 0xffffffff81002a28 <fixup_vdso_exception+24>:	mov    %gs:0x2a9c0,%rdx
=> 0xffffffff81002a31 <fixup_vdso_exception+33>:	cmp    $0x1,%eax
=> 0xffffffff81002a34 <fixup_vdso_exception+36>:	je     0xffffffff81002aad <fixup_vdso_exception+157>
=> 0xffffffff81002aad <fixup_vdso_exception+157>:	mov    %esi,%eax
=> 0xffffffff81002aaf <fixup_vdso_exception+159>:	ret
=> 0xffffffff8102b5ba <do_trap+106>:	test   %al,%al
=> 0xffffffff8102b5bc <do_trap+108>:	jne    0xffffffff8102b5a2 <do_trap+82>
=> 0xffffffff8102b5be <do_trap+110>:	movslq %r13d,%rax
=> 0xffffffff8102b5c1 <do_trap+113>:	mov    %rax,0xb70(%r15)
=> 0xffffffff8102b5c8 <do_trap+120>:	mov    %r13d,%ecx
=> 0xffffffff8102b5cb <do_trap+123>:	mov    $0x1,%eax
=> 0xffffffff8102b5d0 <do_trap+128>:	shl    %cl,%eax
=> 0xffffffff8102b5d2 <do_trap+130>:	mov    %r14,0xb78(%r15)
=> 0xffffffff8102b5d9 <do_trap+137>:	cltq
=> 0xffffffff8102b5db <do_trap+139>:	and    0xb88(%r15),%rax
=> 0xffffffff8102b5e2 <do_trap+146>:	je     0xffffffff8102b631 <do_trap+225>
=> 0xffffffff8102b5e4 <do_trap+148>:	mov    %gs:0x2a9c0,%rax
=> 0xffffffff8102b5ed <do_trap+157>:	ds orb $0x80,0x3(%rax)
=> 0xffffffff8102b5f2 <do_trap+162>:	add    $0x18,%rsp
=> 0xffffffff8102b5f6 <do_trap+166>:	pop    %rbx
=> 0xffffffff8102b5f7 <do_trap+167>:	pop    %rbp
=> 0xffffffff8102b5f8 <do_trap+168>:	pop    %r12
=> 0xffffffff8102b5fa <do_trap+170>:	pop    %r13
=> 0xffffffff8102b5fc <do_trap+172>:	pop    %r14
=> 0xffffffff8102b5fe <do_trap+174>:	pop    %r15
=> 0xffffffff8102b600 <do_trap+176>:	ret
=> 0xffffffff81e812fb <exc_int3+123>:	pop    %rax
=> 0xffffffff81e812fc <exc_int3+124>:	testb  $0x2,0x91(%rbx)
=> 0xffffffff81e81303 <exc_int3+131>:	je     0xffffffff81e81306 <exc_int3+134>
=> 0xffffffff81e81305 <exc_int3+133>:	cli
=> 0xffffffff81e81306 <exc_int3+134>:	mov    %rbx,%rdi
=> 0xffffffff81e81309 <exc_int3+137>:	pop    %rbx
=> 0xffffffff81e8130a <exc_int3+138>:	pop    %rbp
=> 0xffffffff81e8130b <exc_int3+139>:	jmp    0xffffffff81e85030 <irqentry_exit_to_user_mode>
=> 0xffffffff81e85030 <irqentry_exit_to_user_mode>:	nopw   (%rax)
=> 0xffffffff81e85034 <irqentry_exit_to_user_mode+4>:	call   0xffffffff81128080 <exit_to_user_mode_prepare>
=> 0xffffffff81128080 <exit_to_user_mode_prepare>:	push   %r13
=> 0xffffffff81128082 <exit_to_user_mode_prepare+2>:	push   %r12
=> 0xffffffff81128084 <exit_to_user_mode_prepare+4>:	mov    %gs:0x2a9c0,%r12
=> 0xffffffff8112808d <exit_to_user_mode_prepare+13>:	push   %rbp
=> 0xffffffff8112808e <exit_to_user_mode_prepare+14>:	push   %rbx
=> 0xffffffff8112808f <exit_to_user_mode_prepare+15>:	mov    (%r12),%rbx
=> 0xffffffff81128093 <exit_to_user_mode_prepare+19>:	test   $0x2300e,%ebx
=> 0xffffffff81128099 <exit_to_user_mode_prepare+25>:	jne    0xffffffff811280ef <exit_to_user_mode_prepare+111>
=> 0xffffffff8112809b <exit_to_user_mode_prepare+27>:	test   $0x400000,%ebx
=> 0xffffffff811280a1 <exit_to_user_mode_prepare+33>:	jne    0xffffffff8112818b <exit_to_user_mode_prepare+267>
=> 0xffffffff811280a7 <exit_to_user_mode_prepare+39>:	call   0xffffffff8103bb10 <fpregs_assert_state_consistent>
=> 0xffffffff8103bb10 <fpregs_assert_state_consistent>:	nopw   (%rax)
=> 0xffffffff8103bb14 <fpregs_assert_state_consistent+4>:	mov    %gs:0x2a9c0,%rax
=> 0xffffffff8103bb1d <fpregs_assert_state_consistent+13>:	mov    (%rax),%rdx
=> 0xffffffff8103bb20 <fpregs_assert_state_consistent+16>:	and    $0x40,%dh
=> 0xffffffff8103bb23 <fpregs_assert_state_consistent+19>:	jne    0xffffffff8103bb42 <fpregs_assert_state_consistent+50>
=> 0xffffffff8103bb25 <fpregs_assert_state_consistent+21>:	mov    %gs:0x7efeeea0(%rip),%esi        # 0x2a9cc <pcpu_hot+12>
=> 0xffffffff8103bb2c <fpregs_assert_state_consistent+28>:	mov    %gs:0x7efe01b4(%rip),%rdx        # 0x1bce8 <fpu_fpregs_owner_ctx>
=> 0xffffffff8103bb34 <fpregs_assert_state_consistent+36>:	lea    0xbc0(%rax),%rcx
=> 0xffffffff8103bb3b <fpregs_assert_state_consistent+43>:	cmp    %rdx,%rcx
=> 0xffffffff8103bb3e <fpregs_assert_state_consistent+46>:	je     0xffffffff8103bb47 <fpregs_assert_state_consistent+55>
=> 0xffffffff8103bb47 <fpregs_assert_state_consistent+55>:	cmp    0xbc0(%rax),%esi
=> 0xffffffff8103bb4d <fpregs_assert_state_consistent+61>:	jne    0xffffffff8103bb40 <fpregs_assert_state_consistent+48>
=> 0xffffffff8103bb4f <fpregs_assert_state_consistent+63>:	ret
=> 0xffffffff811280ac <exit_to_user_mode_prepare+44>:	and    $0x40,%bh
=> 0xffffffff811280af <exit_to_user_mode_prepare+47>:	jne    0xffffffff8112819e <exit_to_user_mode_prepare+286>
=> 0xffffffff811280b5 <exit_to_user_mode_prepare+53>:	mov    %gs:0x2a9c0,%rax
=> 0xffffffff811280be <exit_to_user_mode_prepare+62>:	andl   $0xfffffff9,0x10(%rax)
=> 0xffffffff811280c2 <exit_to_user_mode_prepare+66>:	xchg   %ax,%ax
=> 0xffffffff811280c4 <exit_to_user_mode_prepare+68>:	pop    %rbx
=> 0xffffffff811280c5 <exit_to_user_mode_prepare+69>:	pop    %rbp
=> 0xffffffff811280c6 <exit_to_user_mode_prepare+70>:	pop    %r12
=> 0xffffffff811280c8 <exit_to_user_mode_prepare+72>:	pop    %r13
=> 0xffffffff811280ca <exit_to_user_mode_prepare+74>:	ret
=> 0xffffffff81e85039 <irqentry_exit_to_user_mode+9>:	jmp    0xffffffff81e85042 <irqentry_exit_to_user_mode+18>
=> 0xffffffff81e85042 <irqentry_exit_to_user_mode+18>:	call   0xffffffff81e82540 <amd_clear_divider>
=> 0xffffffff81e82540 <amd_clear_divider>:	nopw   (%rax)
=> 0xffffffff81e82544 <amd_clear_divider+4>:	xor    %eax,%eax
=> 0xffffffff81e82546 <amd_clear_divider+6>:	mov    $0x1,%ecx
=> 0xffffffff81e8254b <amd_clear_divider+11>:	mov    %eax,%edx
=> 0xffffffff81e8254d <amd_clear_divider+13>:	xchg   %ax,%ax
=> 0xffffffff81e8254f <amd_clear_divider+15>:	ret
=> 0xffffffff81e85047 <irqentry_exit_to_user_mode+23>:	ret
=> 0xffffffff82001299 <asm_exc_int3+57>:	jmp    0xffffffff82001ab0 <error_return>
=> 0xffffffff82001ab0 <error_return>:	testb  $0x3,0x88(%rsp)
=> 0xffffffff82001ab8 <error_return+8>:	je     0xffffffff820016eb <common_interrupt_return+155>
=> 0xffffffff82001abe <error_return+14>:	jmp    0xffffffff82001650 <common_interrupt_return>
=> 0xffffffff82001650 <common_interrupt_return>:	jmp    0xffffffff8200166b <common_interrupt_return+27>
=> 0xffffffff8200166b <common_interrupt_return+27>:	pop    %r15
=> 0xffffffff8200166d <common_interrupt_return+29>:	pop    %r14
=> 0xffffffff8200166f <common_interrupt_return+31>:	pop    %r13
=> 0xffffffff82001671 <common_interrupt_return+33>:	pop    %r12
=> 0xffffffff82001673 <common_interrupt_return+35>:	pop    %rbp
=> 0xffffffff82001674 <common_interrupt_return+36>:	pop    %rbx
=> 0xffffffff82001675 <common_interrupt_return+37>:	pop    %r11
=> 0xffffffff82001677 <common_interrupt_return+39>:	pop    %r10
=> 0xffffffff82001679 <common_interrupt_return+41>:	pop    %r9
=> 0xffffffff8200167b <common_interrupt_return+43>:	pop    %r8
=> 0xffffffff8200167d <common_interrupt_return+45>:	pop    %rax
=> 0xffffffff8200167e <common_interrupt_return+46>:	pop    %rcx
=> 0xffffffff8200167f <common_interrupt_return+47>:	pop    %rdx
=> 0xffffffff82001680 <common_interrupt_return+48>:	pop    %rsi
=> 0xffffffff82001681 <common_interrupt_return+49>:	mov    %rsp,%rdi
=> 0xffffffff82001684 <common_interrupt_return+52>:	mov    %gs:0x6004,%rsp
=> 0xffffffff8200168d <common_interrupt_return+61>:	push   0x30(%rdi)
=> 0xffffffff82001690 <common_interrupt_return+64>:	push   0x28(%rdi)
=> 0xffffffff82001693 <common_interrupt_return+67>:	push   0x20(%rdi)
=> 0xffffffff82001696 <common_interrupt_return+70>:	push   0x18(%rdi)
=> 0xffffffff82001699 <common_interrupt_return+73>:	push   0x10(%rdi)
=> 0xffffffff8200169c <common_interrupt_return+76>:	push   (%rdi)
=> 0xffffffff8200169e <common_interrupt_return+78>:	push   %rax
=> 0xffffffff8200169f <common_interrupt_return+79>:	jmp    0xffffffff820016e4 <common_interrupt_return+148>
=> 0xffffffff820016e4 <common_interrupt_return+148>:	pop    %rax
=> 0xffffffff820016e5 <common_interrupt_return+149>:	pop    %rdi
=> 0xffffffff820016e6 <common_interrupt_return+150>:	swapgs
=> 0xffffffff820016e9 <common_interrupt_return+153>:	jmp    0xffffffff82001706 <common_interrupt_return+182>
=> 0xffffffff82001706 <common_interrupt_return+182>:	testb  $0x4,0x20(%rsp)
=> 0xffffffff8200170b <common_interrupt_return+187>:	jne    0xffffffff8200170f <common_interrupt_return+191>
=> 0xffffffff8200170d <common_interrupt_return+189>:	iretq
=> 0x401832 <main+63>:	lea    0x747ea(%rip),%rax        # 0x476023
